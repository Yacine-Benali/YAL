/* Generated By:JJTree: Do not edit this line. ASTactualParameter.java Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package main.jjtree;

import main.SemanticHelper;

public
class ASTactualParameter extends SimpleNode {

    public int type;
    public Object value;

    public ASTactualParameter(int id) {
        super(id);
    }

    public ASTactualParameter(MyGrammar p, int id) {
        super(p, id);
    }


    /**
     * Accept the visitor.
     **/
    public Object jjtAccept(MyGrammarVisitor visitor, Object data) {
        // first child is an expression
        Object result = jjtGetChild(0).jjtAccept(visitor, data);
        this.value= result;
        this.type = SemanticHelper.getType(result);

        return visitor.visit(this, data);
    }

    @Override
    public String toString() {
        return "ASTactualParameter{" +
                "type=" + SemanticHelper.getStringFromIntType(type) +
                '}';
    }
}
/* JavaCC - OriginalChecksum=afbad0dd416c4d86c2b38ccc8a8fdb40 (do not edit this line) */
